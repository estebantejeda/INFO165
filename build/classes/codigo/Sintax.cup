package codigo;

import java_cup.runtime.Symbol;
import java.io.*;
import java.util.*;

parser code
{:
    private Symbol s;
    Editor edit;
    
    public void setEditor(Editor edit){
        this.edit = edit;
    }
    
    public void syntax_error(Symbol s){
        edit.setConsola("Error de Sintaxis");
    }

    public Symbol getS(){
        return this.s;
    }
    
    ArrayDB array = new ArrayDB();
    
    public void iniciar(String id,String num1,String num2,String num3, String num4, String num5, String num6, String num7, String num8){
        int aux[] = {
    				Integer.parseInt(num1),
    				Integer.parseInt(num2),
    				Integer.parseInt(num3),
    				Integer.parseInt(num4),
    				Integer.parseInt(num5),
    				Integer.parseInt(num6),
    				Integer.parseInt(num7),
    				Integer.parseInt(num8),
    				};
    	array.writeFile(new Array(id, aux));
    }

    public void mira(String id){
        int Ax[] = array.showArray(id);
        for(int i = 0; i < 8; i++){
            if(Ax[i]!=0)
                edit.setConsola(Integer.toString(Ax[i])+" ");
        }

        edit.setConsola("\n");
    }

    public void mostrarDato(String id, String pos){
    	int p = Integer.parseInt(pos);
        int ax = array.showNumber(id, p);
        edit.setConsola(Integer.toString(ax));
        edit.setConsola("\n");

    }
    
    public void mete(String id, String num, String pos){
       int n = Integer.parseInt(num);
       int p = Integer.parseInt(pos);
       array.add(id, n, p);
    }
    
    public void saca(String id, String pos){
        int p = Integer.parseInt(pos);
        array.del(id, p);
    }
:};
/*************************************
         TERMINALES
*************************************/

terminal PARTIR, INICIAR, METER, SACAR, MIRAR, DATO, FINALIZAR, NUM, ID, ERROR, Pa, Pc, COMA;

/*************************************
         NO - TERMINALES
*************************************/


non terminal PAR, INST, INST_F, INI, MET, SAC, MIR, DAT;

start with PAR;

PAR      ::=   PARTIR INST FINALIZAR | PARTIR FINALIZAR;

INST     ::=   INST INST_F | INST_F;

INST_F  ::= INI | MET| SAC | MIR | DAT;


INI        ::= INICIAR Pa ID:id COMA NUM:n1 COMA NUM:n2 COMA NUM:n3 COMA NUM:n4 COMA NUM:n5 COMA NUM:n6 COMA NUM:n7 COMA NUM:n8 Pc
         {: parser.iniciar(id.toString(), n1.toString(), n2.toString(), n3.toString(), n4.toString(), n5.toString(), n6.toString(), n7.toString(),n8.toString());:};

MET      ::=   METER Pa ID:id COMA NUM:n COMA NUM:p Pc 
        {: parser.mete(id.toString(),n.toString(),p.toString());:};

SAC      ::=   SACAR Pa ID:id COMA NUM:p Pc
        {: parser.saca(id.toString(),p.toString());:};


MIR      ::=   MIRAR Pa ID:id Pc
    {: parser.mira(id.toString());:};


DAT      ::=   DATO Pa ID:id COMA NUM:p Pc
    {: parser.mostrarDato(id.toString(),p.toString());:};
































